{"version":3,"file":"core.js","sourceRoot":"","sources":["core.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Created by user on 2018/3/29/029.\n */\n\nimport path from 'upath2';\nexport { path }\n\nexport function globToTree(data: string[]): ITree\n{\n\treturn data.reduce(function (a, b)\n\t{\n\t\tb = path.normalize(b);\n\t\tlet dirname = path.dirname(b);\n\t\tlet basename = path.basename(b);\n\n\t\tlet isdir = b.slice(-1) == path.sep;\n\n\t\tif (isdir)\n\t\t{\n\t\t\tbasename += path.sep;\n\t\t}\n\n\t\t//console.log([dirname, basename]);\n\n\t\tif (dirname == '.')\n\t\t{\n\t\t\tlet f = a;\n\n\t\t\tf[basename] = isdir ? null : basename;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet c = dirname\n\t\t\t\t.split(path.sep)\n\t\t\t;\n\n\t\t\tif (c[0] == '.')\n\t\t\t{\n\t\t\t\tc.shift();\n\t\t\t}\n\n\t\t\tlet f = a;\n\n\t\t\tc.forEach(function (e)\n\t\t\t{\n\t\t\t\te += path.sep;\n\n\t\t\t\tf[e] = f[e] || {};\n\n\t\t\t\tf = f[e];\n\t\t\t});\n\n\t\t\tf[basename] = isdir ? (f[basename] || {}) : basename;\n\t\t}\n\n\t\treturn a;\n\t}, {});\n}\n\nexport function treeToGlob(a: ITree, d: string[] = []): string[]\n{\n\treturn Object.entries(a).reduce(function (a, b)\n\t{\n\t\t//console.log(b);\n\n\t\tif (b[1] === null || typeof b[1] == 'string')\n\t\t{\n\t\t\tlet k = (b[1] === null ? b[0] : b[1]) as string;\n\n\t\t\tif (d.length)\n\t\t\t{\n\t\t\t\t// @ts-ignore\n\t\t\t\ta.push(path.join(...d, k));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ta.push(k);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// @ts-ignore\n\t\t\ta = a.concat(treeToGlob(b[1], d.concat(b[0])));\n\t\t}\n\n\t\treturn a;\n\t}, [] as string[]);\n}\n\nexport module globToTree\n{\n\texport type ITreeEntries = string | ITreeRow | null;\n\n\texport type ITreeRow = {\n\t\t[key: string]: ITreeEntries;\n\t}\n\n\texport type ITree = {\n\t\t[key: string]: string | ITreeRow | null;\n\t}\n}\n\nexport import ITreeEntries = globToTree.ITreeEntries;\nexport import ITreeRow = globToTree.ITreeRow;\nexport import ITree = globToTree.ITree;\n\nglobToTree.globToTree = globToTree;\nglobToTree.treeToGlob = treeToGlob;\nglobToTree.default = globToTree;\n\nexport default exports as typeof import('./core');\n"]}